<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="com.iu.si.bankbook.BankBookDAO">
    <sql id="searchCondition">
    	<if test="kind == 'contents'">
   	 	 WHERE BOOKDETAIL   LIKE  '%' || #{search} || '%'
   	 </if>
   	 
   	 <if test="kind == 'title'">
   	 	WHERE BOOKNAME  LIKE  '%' || #{search} || '%'
   	 </if>
    </sql>
    
    <sql id="searchCondition2">
 			WHERE 
					
			<choose>
				<when test="kind == 'contents' ">
					BOOKDETAIL
				</when>
				<otherwise>
					BOOKNAME
				</otherwise>
			</choose>
					
			 LIKE  '%' || #{search} || '%' 
    </sql>
    
     
   <!--  <select id="getBookNumber" resultType="Long">
     SELECT BANKNUM_SEQ.NEXTVAL FROM DUAL
   </select> -->
   
   <select id="getBankBookCount" parameterType="pager" resultType="Long">
   	 SELECT COUNT(BOOKNUMBER) FROM BANKBOOK
   	<include refid="searchCondition"></include>
   	 
   </select>
     
    <select id ="getBankBookList" parameterType="Pager" resultType="BankBookDTO" statementType="PREPARED"> 
    SELECT * FROM 
		(
			SELECT ROWNUM R,B.* FROM 
				(
					SELECT * FROM  BANKBOOK
					<include refid="searchCondition2"></include>
					ORDER BY BOOKNUMBER DESC
				) B
		)
	WHERE  R BETWEEN  #{startRow} AND #{lastRow}
    </select>
    
    <select id="getBankBookDetail" parameterType="BankBookDTO" resultMap="bankBookDetailResult">
		SELECT B.*,BI.* 
		FROM BANKBOOK B
			LEFT OUTER JOIN 
			BANKBOOKIMG BI
			ON (B.BOOKNUMBER  = BI.BOOKNUMBER)
		WHERE B.BOOKNUMBER = #{bookNumber}
    </select>
    
    <resultMap type="BankBookDTO" id="bankBookDetailResult">
    	<!--Primary key-->
    	<id column="BOOKNUMBER" property="bookNumber" />
    	<!--그외 나머지  -->
    	<result column="BOOKNAME" property="bookName"/>
    	<result column="BOOKDETAIL" property="bookDetail"/>
    	<result column="BOOKRATE" property="bookRate"/>
    	<result column="BOOKSALE" property="bookSale"/>
    	<!-- 1:1  -->
    	<association property="bankBookImgDTO" javaType="BankBookImgDTO">
    		<id column="FILENUM" property="fileNum"/>
    		<result column="FILENAME" property="fileName"/>
    		<result column="ORINAME" property="oriName"/>
    	</association>
    	<!-- 1:N -->
    	<!-- <collection property=""></collection> -->
    </resultMap>
       
     <delete id="setBankBookDelete" parameterType="Long">
     DELETE BANKBOOK WHERE BOOKNUMBER = #{bookNumber}
     </delete>
   
     <insert id="setBankBookAdd" parameterType="BankBookDTO" > 
	     <selectKey keyProperty="bookNumber" resultType="Long" order="BEFORE">
	     	SELECT BANKNUM_SEQ.NEXTVAL FROM DUAL
	     </selectKey>
	      INSERT INTO BANKBOOK
	      VALUES (#{bookNumber},#{bookName},#{bookRate},#{bookSale},#{bookDetail})
     </insert>
     
     <update id="setBankBookUpdate" parameterType="BankBookDTO"> <!--Config 떄문에 BankBookDTO사용가능 -->
     	UPDATE BANKBOOK SET BOOKNAME=#{bookName},BOOKRATE=#{bookRate}, BOOKDETAIL=#{bookDetail}, BOOKSALE=#{bookSale}
		WHERE BOOKNUMBER=#{bookNumber}     
     </update>
     
     <insert id="setBankBookImgAdd" parameterType="BankBookImgDTO">
     	INSERT INTO BANKBOOKIMG
     	VALUES (BANKNUM_SEQ.NEXTVAL, #{fileName},#{oriName},#{bookNumber})
     </insert>
     
     
     
     
     
       <!--Mapper은 DAO가 호출  -->
    </mapper>
